# Mendelian randomization

```{r}
#| label: setup
#| message: false
#| warning: false
#| echo: false

# Libraries
library(data.table)
library(dplyr)
library(geni.plots)
library(reactable)
library(ggiraph)

# Functions
source("./scripts/00_functions.R")
```

## Data

```{r}
#| label: data

# Data
load("./data/01_data_ldmat.Rda")
load("./data/03_data_gwas_pqtls.Rda")

# pQTLs
pqtls <- pqtls %>%
  mutate(
    ld_cluster = if_else(
      rsid %in% c("rs66838809", "rs80107551", "rs76449013"),
      1,
      2
    )
  )

# GWAS
gwas <- gwas %>%
  filter(!(id %in% c("GCST006979", "GCST006980")))
```

## Analyses {#sec-mr}

Mendelian randomization (MR) analyses of circulating sclerostin against cardiovascular events and risk factors were performed using the datasets in [@tbl-gwas-study-info]. The *cis* sclerostin pQTLs were used as the genetic instruments and two variant sets were used: (i) all 5 *cis* sclerostin pQTLs, and (ii) one *cis* sclerostin pQTL from each LD cluster (i.e., rs66838809[^1] & rs1107747; [@sec-ldmat]). Since the sclerostin pQTLs are correlated, the generalized inverse-weighted method [@burgess2016] was used to perform the MR analyses.  

```{r}
#| label: mr-analyses

# MR analyses
mr_results <- tibble()
for (id in unique(gwas$id)) {

  ## MR data
  mr_gwas <- gwas %>%
    filter(id == !!id) %>%
    inner_join(
      x = pqtls,
      y = .,
      by = c("rsid", "chr", "pos", "ref", "alt")
    ) %>%
    relocate(id, .before = rsid)

  ## MR analysis
  for (j in seq_len(2)) {

    ### Data
    if (j == 1) {
      mr_data <- mr_gwas
      mr_corr <- ld_mat[
        match(mr_data$rsid, rownames(ld_mat)),
        match(mr_data$rsid, rownames(ld_mat)),
        drop = FALSE
      ]
      mr_model <- "5_cis_pqtls"
    } else {
      mr_data <- mr_gwas %>%
        arrange(pvalue.x) %>%
        distinct(ld_cluster, .keep_all = TRUE)
      mr_corr <- ld_mat[
        match(mr_data$rsid, rownames(ld_mat)),
        match(mr_data$rsid, rownames(ld_mat)),
        drop = FALSE
      ]
      mr_model <- "2_cis_pqtls"
    }
    if (any(mr_data$rsid != rownames(mr_corr)))
      stop("genetic varaints are not aligned between the GWAS data and the LD matrix")

    ### Input
    mr_inputs <- MendelianRandomization::mr_input(
      bx = mr_data$beta.x,
      bxse = mr_data$se.x,
      by = mr_data$beta.y,
      byse = mr_data$se.y,
      correlation = mr_corr,
      snps = mr_data$rsid
    )

    ### Analysis
    mr_analysis <- MendelianRandomization::mr_ivw(
      mr_inputs,
      model = "fixed",
      correl = TRUE
    )
    mr_analysis <- tibble(
      id = !!id,
      model = !!mr_model,
      n_snps = !!nrow(mr_data),
      beta = -1 * !!round(mr_analysis$Estimate, 6), # per lower SD sclerostin
      se = !!round(mr_analysis$StdError, 6),
      pvalue = !!signif(mr_analysis$Pvalue, 4)
    )

    ### Results
    mr_results <- mr_results %>%
      bind_rows(mr_analysis)

  }

}

# MR results
mr_results <- studies %>%
  select(id, pmid, trait, n, n_cases) %>%
  inner_join(
    x = .,
    y = mr_results,
    by = "id"
  )
```

Additional MR analyses of hypertension[^2], stroke events[^3] and coronary artery calcification were extracted from Table 2 in @zheng2023 and added to the results.

```{r}
#| label: mr-analyses-extra

# MR analyses extra
mr_results_extra <- fread(
  "./data/00_data_mr.tsv",
  header = TRUE, data.table = FALSE, sep = "\t"
)
mr_studies_extra <- fread(
  "./data/00_data_mr_studies.tsv",
  header = TRUE, data.table = FALSE, sep = "\t"
)

# MR results
mr_results <- mr_studies_extra %>%
  select(id, pmid, trait, n, n_cases) %>%
  inner_join(
    x = .,
    y = mr_results_extra,
    by = "id"
  ) %>%
  bind_rows(mr_results, .)

# MR studies
mr_studies <- studies %>%
  bind_rows(mr_studies_extra)
```

```{r}
#| label: download-mr-results
#| echo: false

mr_results %>%
  downloadthis::download_this(
    output_name = "mr",
    output_extension = ".xlsx",
    button_label = "Download as xlsx",
    button_type = "primary",
    has_icon = TRUE,
    icon = "fa fa-save"
  )
```

<details>
<summary>README</summary>

* `id` - dataset ID  
* `pmid` - PubMed ID  
* `trait` - phenotype  
* `n` - number of samples  
* `n_cases` - number of cases  
* `model` - MR model  
* `n_snps` - number of SNPs  
* `beta` - MR effect size (per SD lower sclerostin)  
* `se` - MR standard error  
* `pvalue` - MR *p*-value  

</details>

## Results

::: {.panel-tabset}

### Associations

```{r}
#| label: tbl-mr-results
#| tbl-cap: MR results of the effect of per SD lower sclerostin on cardiovascular events and risk factors
#| echo: false

empty_kable()

mr_results <- mr_results %>%
  mutate(
    model_id = if_else(
      model == "2_cis_pqtls",
      0,
      1
    )
  ) %>%
  arrange(model_id) %>%
  select(-c(model_id))

mr_results %>%
  mutate(
    model = gsub("_", " ", model),
    lci = beta - 1.96 * se,
    uci = beta + 1.96 * se,
    est_ci = if_else(
      is.na(n_cases),
      sprintf(
        "%.3f (%.3f, %.3f)",
        round(beta, 3), round(lci, 3), round(uci, 3)
      ),
      sprintf(
        "%.3f (%.3f, %.3f)",
        round(exp(beta), 3), round(exp(lci), 3), round(exp(uci), 3)
      )
    ),
    pvalue = signif(pvalue, 3)
  ) %>%
  select(id, trait, model, n_snps, est_ci, pvalue) %>%
  reactable(
    searchable = TRUE,
    pagination = TRUE,
    bordered = TRUE,
    striped = TRUE,
    columns = list(
      id = colDef(name = "Dataset ID", minWidth = 100, align = "left"),
      trait = colDef(name = "Phenotype", minWidth = 160, align = "left"),
      model = colDef(name = "Model", minWidth = 80, align = "left"),
      n_snps = colDef(name = "N SNPs", minWidth = 70, align = "left"),
      est_ci = colDef(
        name = "OR / Effect (95% CI)", minWidth = 120, align = "left",
        style = function(value, index) {
          if (is.na(mr_results$n_cases[index])) {
            colour <- "darkgreen"
          } else {
            colour <- "darkblue"
          }
          list(color = colour)
        }
      ),
      pvalue = colDef(name = "P-value", minWidth = 70, align = "left")
    )
  )
```

`r fontawesome::fa(name = "fas fa-square", fill = "darkgreen", height = "1em")` : Effect (in SD)  
`r fontawesome::fa(name = "fas fa-square", fill = "darkblue", height = "1em")` : Odds ratio  

### QQ plots

::: {.panel-tabset}

#### Original datasets

::: {.panel-tabset .nav-pills}

##### 2 *cis* pQTLs

```{r}
#| label: fig-qq-org-2-pqtls
#| fig-cap: QQ plot of MR results (2 *cis* pQTLs) for the original datasets

mr_results %>%
  filter(model == "2_cis_pqtls") %>%
  inner_join(
    x = select(mr_studies, id, flag),
    y = .,
    by = "id"
  ) %>%
  filter(flag == "Y") %>%
  distinct(trait, .keep_all = TRUE) %>%
  qq_plot()
```

##### 5 *cis* pQTLs

```{r}
#| label: fig-qq-org-5-pqtls
#| fig-cap: QQ plot of MR results (5 *cis* pQTLs) for the original datasets

mr_results %>%
  filter(model == "5_cis_pqtls") %>%
  inner_join(
    x = select(mr_studies, id, flag),
    y = .,
    by = "id"
  ) %>%
  filter(flag == "Y") %>%
  distinct(trait, .keep_all = TRUE) %>%
  qq_plot()
```

:::

#### Additional datasets

::: {.panel-tabset .nav-pills}

##### 2 *cis* pQTLs

```{r}
#| label: fig-qq-add-2-pqtls
#| fig-cap: QQ plot of MR results (2 *cis* pQTLs) for the additional datasets

mr_results %>%
  filter(model == "2_cis_pqtls") %>%
  inner_join(
    x = select(mr_studies, id, flag),
    y = .,
    by = "id"
  ) %>%
  filter(flag == "N") %>%
  qq_plot()
```

##### 5 *cis* pQTLs

```{r}
#| label: fig-qq-add-5-pqtls
#| fig-cap: QQ plot of MR results (5 *cis* pQTLs) for the additional datasets

mr_results %>%
  filter(model == "5_cis_pqtls") %>%
  inner_join(
    x = select(mr_studies, id, flag),
    y = .,
    by = "id"
  ) %>%
  filter(flag == "N") %>%
  qq_plot()
```

:::

:::

:::

[^1]: rs66838809 was not available in GCST006867, so rs80107551 was used instead.  
[^2]: The hypertension results were transformed from the risk difference scale to the log-odds scale.  
[^3]: These stroke analyses use rs1107747 and a proxy of rs80107551.  
